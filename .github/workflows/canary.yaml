name: canary

on:
  pull_request:
    types: [opened]
  issue_comment:
    types: [created]

jobs:
  canary:
    if: github.event.issue.state == 'open' && contains(github.event.comment.html_url, '/pull/') && contains(github.event.comment.body, 'canary publish')
    runs-on: ubuntu-latest
    strategy:
        matrix:
          node-version: [12.x]

    env:
      SLACK_CHANNEL: "#triple-web-dev-notifications"
      SLACK_WEBHOOK: ${{ secrets.FRONTEND_NOTIFICATIONS_WEBHOOK_URL }}
      SLACK_USERNAME: "ESLint Config Triple"
      SLACK_ICON_EMOJI: ":eslint:"
      SLACK_COLOR: gray
      SLACK_FOOTER: "Triple Frontend"
      SLACK_AUTHOR_NAME: ${{ github.event.sender.login }}
      SLACK_AUTHOR_ICON: "${{ github.event.sender.avatar_url }}"
      SLACK_GITHUB_EVENT_NAME: "${{ github.event_name }}"
      SLACK_GITHUB_REPOSITORY: ${{ github.repository }}
      SLACK_DETAIL_URL: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'

      - name: Recognize head sha of pull request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npx @titicaca/gha-tools fetch-github-pr ${{ github.event.issue.number }}

          PR_SHA=$(cat ./pr.json | jq -r '.head.sha')
          PR_REF=$(cat ./pr.json | jq -r '.head.ref')
          echo "PR_NUMBER=${{ github.event.issue.number }}" >> $GITHUB_ENV
          echo "PR_SHA=$PR_SHA" >> $GITHUB_ENV
          echo "PR_REF=$PR_REF" >> $GITHUB_ENV
          echo "SLACK_GITHUB_REF=$PR_REF" >> $GITHUB_ENV
          echo "PR_SHORT_SHA=${PR_SHA:0:7}" >> $GITHUB_ENV
          echo "PR_TITLE=$(cat ./pr.json | jq -r '.title')" >> $GITHUB_ENV
          echo "SLACK_TOPIC=$(cat ./pr.json | jq -r '.title')" >> $GITHUB_ENV

      - name: Reaction
        run: |
          curl -v \
            --url https://api.github.com/repos/${{ github.repository }}/issues/comments/${{ github.event.comment.id }}/reactions \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.squirrel-girl-preview+json" \
            -H "Content-Type: application/json" \
            -f --request POST \
            -d "{\"content\":\"+1\"}"
          curl -v \
            --url https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -f --request POST \
            -d "{\"body\":\"@${{ github.event.comment.user.login }} I got it! :rocket: \"}"

      - name: Git checkout@v2
        uses: actions/checkout@v2
        with:
          ref: ${{ env.PR_SHA }}

      - name: Define canary version
        run: |
          echo "CANARY_VERSION=v$(cat package.json | jq -r '.version')-${{ env.PR_SHORT_SHA }}" >> $GITHUB_ENV

      - name: Notify build start to slack
        env:
          SLACK_TITLE: ":rocket: Build Started"
          NODE_AUTH_TOKEN: ${{ secrets.READ_ONLY_NPM_TOKEN }}
        run: |
          npx @titicaca/gha-tools notify

      - name: Cache .npm
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Build
        run: |
          npm ci
          npm test
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READ_ONLY_NPM_TOKEN }}

      - name: Notify build and test success to slack
        if: success()
        env:
          SLACK_TITLE: ":tada: Build Succeed"
          SLACK_COLOR: success
          NODE_AUTH_TOKEN: ${{ secrets.READ_ONLY_NPM_TOKEN }}
        run: |
          npx @titicaca/gha-tools notify

      - name: Notify build and test fail to slack
        if: failure()
        env:
          SLACK_TITLE: ":x: Build Failed"
          SLACK_COLOR: success
          NODE_AUTH_TOKEN: ${{ secrets.READ_ONLY_NPM_TOKEN }}
        run: |
          npx @titicaca/gha-tools notify

      - name: Notify deploy start to slack
        env:
          SLACK_TITLE: ":rocket: Deploy Started"
          SLACK_TOPIC: "Publishing `${{ env.CANARY_VERSION}}`"
          NODE_AUTH_TOKEN: ${{ secrets.READ_ONLY_NPM_TOKEN }}
        run: |
          npx @titicaca/gha-tools notify

      - name: Tag canary version and publish to npm
        run: |
          npm version ${{ env.CANARY_VERSION }} --git-tag-version=false
          npm publish --tag canary
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READ_WRITE_NPM_TOKEN }}

      - name: Notify deploy success to slack
        if: success()
        env:
          SLACK_TITLE: ":tada: Publish Succeed"
          SLACK_COLOR: success
          SLACK_TOPIC: "`${{ env.CANARY_VERSION}}`"
          NODE_AUTH_TOKEN: ${{ secrets.READ_ONLY_NPM_TOKEN }}
        run: |
          npx @titicaca/gha-tools notify

      - name: Notify deploy fail to slack
        if: failure()
        env:
          SLACK_TITLE: ":x: Publish Failed"
          SLACK_COLOR: fail
          SLACK_TOPIC: "`${{ env.CANARY_VERSION}}`"
          NODE_AUTH_TOKEN: ${{ secrets.READ_ONLY_NPM_TOKEN }}
        run: |
          npx @titicaca/gha-tools notify
