name: CI
on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

env:
  SLACK_CHANNEL: '#a-dev-notifications'
  SLACK_WEBHOOK: ${{ secrets.FRONTEND_NOTIFICATIONS_WEBHOOK_URL }}
  SLACK_USERNAME: 'ESLint Config Triple'
  SLACK_ICON_EMOJI: ':eslint:'
  SLACK_COLOR: gray
  SLACK_FOOTER: 'Triple Frontend'
  SLACK_TOPIC: ${{ github.event.pull_request.title }}
  SLACK_AUTHOR_NAME: ${{ github.event.sender.login }}
  SLACK_AUTHOR_ICON: '${{ github.event.sender.avatar_url }}'
  SLACK_GITHUB_REF: '${{ github.event.pull_request.head.ref }}'
  SLACK_GITHUB_EVENT_NAME: '${{ github.event_name }}'
  SLACK_GITHUB_REPOSITORY: ${{ github.repository }}
  SLACK_DETAIL_URL: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [15.x]
    steps:
      - name: Git checkout@v2
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'

      - name: Define variables
        run: |
          PR_SHA=${{ github.event.pull_request.head.sha }}
          PR_SHORT_SHA=${PR_SHA:0:7}
          echo "PR_SHA=$PR_SHA" >> $GITHUB_ENV
          echo "PR_SHORT_SHA=$PR_SHORT_SHA" >> $GITHUB_ENV
          echo "PR_TITLE=${{ github.event.pull_request.title }}" >> $GITHUB_ENV

          VERSION="v$(cat ./package.json | jq -r '.version')-$PR_SHORT_SHA"
          echo "DEPLOY_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Notify build start to slack
        env:
          SLACK_TITLE: ':rocket: Build Started'
          NODE_AUTH_TOKEN: ${{ secrets.READ_ONLY_NPM_TOKEN }}
        run: |
          npx @titicaca/gha-tools notify

      - name: Cache .npm
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Build
        run: |
          npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READ_ONLY_NPM_TOKEN }}

      - name: Lint
        run: npm run lint

      - name: Test
        run: npm test

      - name: Notify build and test success to slack
        if: success()
        env:
          SLACK_TITLE: ':tada: Build Succeed'
          SLACK_COLOR: success
          NODE_AUTH_TOKEN: ${{ secrets.READ_ONLY_NPM_TOKEN }}
        run: |
          npx @titicaca/gha-tools notify

      - name: Notify build and test fail to slack
        if: failure()
        env:
          SLACK_TITLE: ':x: Build Failed'
          SLACK_COLOR: fail
          NODE_AUTH_TOKEN: ${{ secrets.READ_ONLY_NPM_TOKEN }}
        run: |
          npx @titicaca/gha-tools notify
